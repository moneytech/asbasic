srcdir=		@srcdir@
VPATH=		@srcdir@
prefix=		@prefix@
exec_prefix=	@exec_prefix@
datarootdir=	@datarootdir@
localedir=	@localedir@

CC=		@CC@
RANLIB=		@RANLIB@
CFLAGS=		@CFLAGS@
CPPFLAGS=	@CPPFLAGS@ -DLOCALEDIR=\"$(localedir)\"
LDFLAGS=	@LDFLAGS@
LIBS=		@LIBS@

CATALOGS=	de.mo

all:		asbasic all-po-@USE_NLS@
all-po-no:
all-po-yes:	$(CATALOGS)

asbasic:		main.o libasbasic.a getopt.o getopt1.o
		$(CC) -o $@ $(LDFLAGS) main.o libasbasic.a getopt.o getopt1.o $(LIBS)

token.c:	token.l token.h
		flex -i -t token.l >token.c

libasbasic.a:	auto.o asbasic.o fs.o global.o token.o program.o \
		str.o value.o var.o
		rm -f $@
		ar cq $@ auto.o asbasic.o fs.o global.o token.o program.o \
		str.o value.o var.o
		@RANLIB@ libasbasic.a

cppcheck:
		cppcheck $(CPPFLAGS) -q --enable=all .

install-po:	install-po-@USE_NLS@
install-po-no:
install-po-yes:	$(CATALOGS)
		for cat in $(CATALOGS); do \
		  dir=$(localedir)/`basename $$cat .mo`/LC_MESSAGES; \
		  [ -d $$dir ] || @INSTALL@ -m 755 -d $$dir; \
		  @INSTALL@ -m 644 $$cat $$dir/asbasic.mo; \
		done

check:		asbasic
		for i in test/test*; do ./$$i || break; done

install:	all
		@INSTALL@ -m 755 -d @bindir@
		@INSTALL@ asbasic @bindir@/asbasic
		@INSTALL@ -m 755 -d @libdir@
		@INSTALL@ -m 644 libasbasic.a @libdir@/libasbasic.a
		@RANLIB@ @libdir@/libasbasic.a
		@INSTALL@ -m 755 -d @mandir@/man1
		@INSTALL@ -m 644 asbasic.1 @mandir@/man1/asbasic.1
		make install-po

.c.o:
		$(CC) -c $(CPPFLAGS) $(CFLAGS) $<

.SUFFIXES:	.po .mo

.po.mo:
		msgfmt -o $@ $<

*.po:		asbasic.pot
		for cat in *.po; do \
		  if msgmerge $$cat asbasic.pot -o $$cat.tmp; then \
		    mv -f $$cat.tmp $$cat; \
		  else \
		    echo "msgmerge for $$cat failed!"; \
		    rm -f $$cat.tmp; \
		  fi; \
		done

asbasic.pot:	[a-b]*.[ch] [e-s]*.[ch] v*.[ch]
		xgettext --add-comments --keyword=_ [a-b]*.[ch] [e-s]*.[ch] v*.[ch] && test -f messages.po && mv messages.po $@

asbasic.pdf:	asbasic.1
		groff -Tps -t -man asbasic.1 | ps2pdf - $@

#{{{script}}}#{{{ clean
clean:
		rm -f *.out core token.c *.o libasbasic.a *.mo
#}}}
#{{{ distclean
distclean:	clean
		rm -rf autom4te.cache asbasic config.cache config.h config.log config.status configure.lineno Makefile asbasic.1 test/runasbasic
#}}}
#{{{ tar
tar:		asbasic.pdf distclean
		(b=`pwd`; b=`basename $$b`; cd ..; tar zcvf $$b.tar.gz $$b/LICENSE $$b/INSTALL $$b/Makefile.in $$b/README $$b/NEWS $$b/configure $$b/install-sh $$b/test $$b/[a-z]*.*)
#}}}
#{{{ dependencies
auto.o:	auto.c config.h auto.h programtypes.h var.h value.h str.h token.h autotypes.h program.h
asbasic.o:	asbasic.c config.h getopt.h auto.h programtypes.h var.h value.h str.h token.h autotypes.h \
	 program.h asbasic.h error.h fs.h global.h statement.c statement.h
fs.o:	fs.c config.h fs.h str.h
getopt.o:	getopt.c config.h getopt.h
getopt1.o:	getopt1.c config.h getopt.h
global.o:	global.c config.h auto.h programtypes.h var.h value.h str.h token.h autotypes.h \
	 program.h asbasic.h error.h fs.h global.h
main.o:	main.c config.h getopt.h asbasic.h
program.o:	program.c config.h auto.h programtypes.h var.h value.h str.h token.h autotypes.h \
	 program.h error.h fs.h
statement.o:	statement.c config.h statement.h
str.o:	str.c config.h str.h
token.o:	token.c config.h auto.h programtypes.h var.h value.h str.h token.h autotypes.h \
	 program.h statement.h
value.o:	value.c config.h error.h value.h str.h
var.o:	var.c config.h error.h var.h value.h str.h
#}}}
